package com.sbm.mc.sevenroomstoreviewpro.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ResTableAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResTableAllPropertiesEquals(ResTable expected, ResTable actual) {
        assertResTableAutoGeneratedPropertiesEquals(expected, actual);
        assertResTableAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResTableAllUpdatablePropertiesEquals(ResTable expected, ResTable actual) {
        assertResTableUpdatableFieldsEquals(expected, actual);
        assertResTableUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResTableAutoGeneratedPropertiesEquals(ResTable expected, ResTable actual) {
        assertThat(expected)
            .as("Verify ResTable auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResTableUpdatableFieldsEquals(ResTable expected, ResTable actual) {
        assertThat(expected)
            .as("Verify ResTable relevant properties")
            .satisfies(e -> assertThat(e.getTableNumber()).as("check tableNumber").isEqualTo(actual.getTableNumber()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResTableUpdatableRelationshipsEquals(ResTable expected, ResTable actual) {
        assertThat(expected)
            .as("Verify ResTable relationships")
            .satisfies(e -> assertThat(e.getReservation()).as("check reservation").isEqualTo(actual.getReservation()));
    }
}
