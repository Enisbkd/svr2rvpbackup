package com.sbm.mc.sevenroomstoreviewpro.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClientTagAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientTagAllPropertiesEquals(ClientTag expected, ClientTag actual) {
        assertClientTagAutoGeneratedPropertiesEquals(expected, actual);
        assertClientTagAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientTagAllUpdatablePropertiesEquals(ClientTag expected, ClientTag actual) {
        assertClientTagUpdatableFieldsEquals(expected, actual);
        assertClientTagUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientTagAutoGeneratedPropertiesEquals(ClientTag expected, ClientTag actual) {
        assertThat(expected)
            .as("Verify ClientTag auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientTagUpdatableFieldsEquals(ClientTag expected, ClientTag actual) {
        assertThat(expected)
            .as("Verify ClientTag relevant properties")
            .satisfies(e -> assertThat(e.getTag()).as("check tag").isEqualTo(actual.getTag()))
            .satisfies(e -> assertThat(e.getTagDisplay()).as("check tagDisplay").isEqualTo(actual.getTagDisplay()))
            .satisfies(e -> assertThat(e.getGroup()).as("check group").isEqualTo(actual.getGroup()))
            .satisfies(e -> assertThat(e.getGroupDisplay()).as("check groupDisplay").isEqualTo(actual.getGroupDisplay()))
            .satisfies(e -> assertThat(e.getColor()).as("check color").isEqualTo(actual.getColor()))
            .satisfies(e -> assertThat(e.getTagSearchQuery()).as("check tagSearchQuery").isEqualTo(actual.getTagSearchQuery()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientTagUpdatableRelationshipsEquals(ClientTag expected, ClientTag actual) {
        assertThat(expected)
            .as("Verify ClientTag relationships")
            .satisfies(e -> assertThat(e.getClient()).as("check client").isEqualTo(actual.getClient()));
    }
}
