package com.sbm.mc.sevenroomstoreviewpro.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CustomFieldAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomFieldAllPropertiesEquals(CustomField expected, CustomField actual) {
        assertCustomFieldAutoGeneratedPropertiesEquals(expected, actual);
        assertCustomFieldAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomFieldAllUpdatablePropertiesEquals(CustomField expected, CustomField actual) {
        assertCustomFieldUpdatableFieldsEquals(expected, actual);
        assertCustomFieldUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomFieldAutoGeneratedPropertiesEquals(CustomField expected, CustomField actual) {
        assertThat(expected)
            .as("Verify CustomField auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomFieldUpdatableFieldsEquals(CustomField expected, CustomField actual) {
        assertThat(expected)
            .as("Verify CustomField relevant properties")
            .satisfies(e -> assertThat(e.getSystemName()).as("check systemName").isEqualTo(actual.getSystemName()))
            .satisfies(e -> assertThat(e.getDisplayOrder()).as("check displayOrder").isEqualTo(actual.getDisplayOrder()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getValue()).as("check value").isEqualTo(actual.getValue()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomFieldUpdatableRelationshipsEquals(CustomField expected, CustomField actual) {
        assertThat(expected)
            .as("Verify CustomField relationships")
            .satisfies(e -> assertThat(e.getClient()).as("check client").isEqualTo(actual.getClient()));
    }
}
